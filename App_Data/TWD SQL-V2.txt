DROP TABLE [dbo].[webpages_UsersInRoles]
DROP TABLE [dbo].[webpages_OAuthMembership] 
DROP TABLE [dbo].[webpages_Membership]
DROP TABLE EntityParameterGrade;
DROP TABLE EntityParameter;
DROP TABLE CourseEntityGrade;
DROP TABLE CourseEntity;
DROP TABLE Marker;
DROP TABLE Course;
DROP TABLE Module;
DROP TABLE TWD_User;
DROP TABLE [dbo].[webpages_Roles]
DROP TABLE Intake;
GO
CREATE TABLE Intake(
	intakeId    SMALLINT IDENTITY(1,1)	NOT NULL,
	intake    	VARCHAR(60),
	startDate  	DATE,
	endDate    	DATE,
	PRIMARY KEY (intakeId))
GO
INSERT INTO Intake (intake, startDate, endDate) VALUES('TWD01', '20070113', '20070620');
INSERT INTO Intake (intake, startDate, endDate) VALUES('TWD02', '20080113', '20080620');
INSERT INTO Intake (intake, startDate, endDate) VALUES('TWD03', '20090113', '20090620');
INSERT INTO Intake (intake, startDate, endDate) VALUES('TWD04', '20100113', '20100620');
INSERT INTO Intake (intake, startDate, endDate) VALUES('TWD05', '20110113', '20110620');
INSERT INTO Intake (intake, startDate, endDate) VALUES('TWD06', '20120113', '20120620');
GO
CREATE TABLE [dbo].[webpages_Roles] (
    [RoleId]   INT            IDENTITY (1, 1) NOT NULL,
    [RoleName] NVARCHAR (256) NOT NULL,
    PRIMARY KEY CLUSTERED ([RoleId] ASC),
    UNIQUE NONCLUSTERED ([RoleName] ASC)
);
GO
INSERT INTO [dbo].[webpages_Roles] VALUES('Administrator');
INSERT INTO [dbo].[webpages_Roles] VALUES('Instructor');
INSERT INTO [dbo].[webpages_Roles] VALUES('Student');
GO
CREATE TABLE TWD_User(
	userId          INTEGER IDENTITY(1,1),
	userName        VARCHAR(40)		NOT NULL,
	bcitId          VARCHAR(10),
	firstName       VARCHAR(20),
	lastName        VARCHAR(20),
	intakeId		SMALLINT,
	PRIMARY KEY (userId),
	FOREIGN KEY (intakeId) REFERENCES Intake(intakeId))
GO
INSERT INTO TWD_User (userName, firstName, lastName, intakeId) VALUES('dalton6@my.bcit.ca','David','Alton', 6);
INSERT INTO TWD_User (userName, firstName, lastName, intakeId) VALUES('wcheng74@my.bcit.ca','James','Chen', 6);
INSERT INTO TWD_User (userName, firstName, lastName, intakeId) VALUES('rgill266@my.bcit.ca','Ravdeep','Gill', 6);
INSERT INTO TWD_User (userName, firstName, lastName, intakeId) VALUES('sjones145@my.bcit.ca','Sam','Jones', 6);
INSERT INTO TWD_User (userName, firstName, lastName)         VALUES('bkozma22@my.bcit.ca','Beata','Kozma');
INSERT INTO TWD_User (userName, firstName, lastName)         VALUES('mwhyte15@my.bcit.ca','Michael','Whyte');
INSERT INTO TWD_User (userName, firstName, lastName)         VALUES('tlane2@my.bcit.ca','Tom','Lane');
INSERT INTO TWD_User (userName, firstName, lastName)         VALUES('patmcgee5@my.bcit.ca','Pat','McGee');
GO
CREATE TABLE Module(
	moduleId	    SMALLINT IDENTITY(1,1) NOT NULL,
	module          VARCHAR(60),
	moduleWeight	SMALLINT,
	intakeId		SMALLINT 	NOT NULL,
	PRIMARY KEY (moduleId),
	FOREIGN KEY (intakeId) REFERENCES Intake(intakeId))
GO
INSERT INTO Module (module, moduleWeight, intakeId) VALUES('Planning & Designing Web Sites', 8, 6);
INSERT INTO Module (module, moduleWeight, intakeId) VALUES('Coding & Developing Web Sites', 10, 6);
INSERT INTO Module (module, moduleWeight, intakeId) VALUES('Testing & Managing Web Sites', 8, 6);
INSERT INTO Module (module, moduleWeight, intakeId) VALUES('Specialty Topics', 6, 6);
INSERT INTO Module (module, moduleWeight, intakeId) VALUES('Project', 8, 6);
GO
CREATE TABLE Course(
	courseId	    SMALLINT IDENTITY(1,1) NOT NULL,
	course		    VARCHAR(60),
	courseHours     SMALLINT,
	courseWeight	SMALLINT,
    showResults     BIT,
	moduleId		SMALLINT	NOT NULL,
	PRIMARY KEY (courseID),
	FOREIGN KEY (moduleId) REFERENCES Module(moduleId)
GO
INSERT INTO Course (course, courseWeight, showResults, moduleId, userId) VALUES('Managing Web Sites', 21, 0, 1, 5);
INSERT INTO Course (course, courseWeight, showResults, moduleId, userId) VALUES('User Experience Design', 31, 0, 1, 5);
INSERT INTO Course (course, courseWeight, showResults, moduleId, userId) VALUES('Photoshop - level 1', 16, 0, 1, 7);
INSERT INTO Course (course, courseWeight, showResults, moduleId, userId) VALUES('Illustrator', 16, 0, 1, 8);
INSERT INTO Course (course, courseWeight, showResults, moduleId, userId) VALUES('Photoshop - level 2', 16, 0, 1, 6);
INSERT INTO Course (course, courseWeight, showResults, moduleId, userId) VALUES('XHTML/CSS - level 1', 15, 0, 2, 7);
INSERT INTO Course (course, courseWeight, showResults, moduleId, userId) VALUES('XHTML/CSS3 - level 1', 10, 0, 2, 8);
INSERT INTO Course (course, courseWeight, showResults, moduleId, userId) VALUES('XHTML/CSS3 - level 2', 10, 0, 2, 6);
INSERT INTO Course (course, courseWeight, showResults, moduleId, userId) VALUES('Intro to JavaScript & jQuery', 10, 0, 2, 7);
INSERT INTO Course (course, courseWeight, showResults, moduleId, userId) VALUES('XHTML/CSS3 - level 2', 20, 0, 2, 6);
INSERT INTO Course (course, courseWeight, showResults, moduleId, userId) VALUES('Intro to PHP', 35, 0, 2, 8);
GO
CREATE TABLE Marker(
	courseId		SMALLINT NOT NULL, 
    userId          INTEGER  NOT NULL, 
	PRIMARY KEY (courseId, userId),
	FOREIGN KEY (userId) REFERENCES TWD_User(userId),
	FOREIGN KEY (courseId) REFERENCES Course(courseId))
GO
INSERT INTO CourseInstructor VALUES(1, 5);
INSERT INTO CourseInstructor VALUES(2, 6);
INSERT INTO CourseInstructor VALUES(2, 7);
INSERT INTO CourseInstructor VALUES(3, 8);
INSERT INTO CourseInstructor VALUES(3, 6);
INSERT INTO CourseInstructor VALUES(4, 5);
INSERT INTO CourseInstructor VALUES(5, 7);
INSERT INTO CourseInstructor VALUES(6, 8);
INSERT INTO CourseInstructor VALUES(6, 5);
GO
CREATE TABLE CourseEntity(
	courseEntityID    	SMALLINT IDENTITY(1,1) NOT NULL,
	courseEntity    	VARCHAR(60),
	courseEntityWeight	SMALLINT,
    courseId           	SMALLINT	NOT NULL,
	PRIMARY KEY (courseEntityId),
	FOREIGN KEY (courseId) REFERENCES Course(courseId))
GO
INSERT INTO CourseEntity (courseEntity, courseEntityWeight, courseId) VALUES('LAB 01', 5, 1);
INSERT INTO CourseEntity (courseEntity, courseEntityWeight, courseId) VALUES('LAB 02', 5, 1);
INSERT INTO CourseEntity (courseEntity, courseEntityWeight, courseId) VALUES('LAB 03', 5, 1);
INSERT INTO CourseEntity (courseEntity, courseEntityWeight, courseId) VALUES('LAB 04', 5, 1);
INSERT INTO CourseEntity (courseEntity, courseEntityWeight, courseId) VALUES('LAB 05', 5, 1);
INSERT INTO CourseEntity (courseEntity, courseEntityWeight, courseId) VALUES('LAB 01', 5, 2);
INSERT INTO CourseEntity (courseEntity, courseEntityWeight, courseId) VALUES('LAB 02', 5, 2);
INSERT INTO CourseEntity (courseEntity, courseEntityWeight, courseId) VALUES('LAB 03', 5, 2);
INSERT INTO CourseEntity (courseEntity, courseEntityWeight, courseId) VALUES('LAB 04', 5, 2);
INSERT INTO CourseEntity (courseEntity, courseEntityWeight, courseId) VALUES('LAB 05', 5, 2);
INSERT INTO CourseEntity (courseEntity, courseEntityWeight, courseId) VALUES('Test 01', 10, 1);
INSERT INTO CourseEntity (courseEntity, courseEntityWeight, courseId) VALUES('Test 01', 10, 2);
INSERT INTO CourseEntity (courseEntity, courseEntityWeight, courseId) VALUES('Test 02', 10, 1);
INSERT INTO CourseEntity (courseEntity, courseEntityWeight, courseId) VALUES('Test 02', 10, 2);
INSERT INTO CourseEntity (courseEntity, courseEntityWeight, courseId) VALUES('Project 01', 20, 1);
INSERT INTO CourseEntity (courseEntity, courseEntityWeight, courseId) VALUES('Project 01', 20, 2);
INSERT INTO CourseEntity (courseEntity, courseEntityWeight, courseId) VALUES('Project 02', 25, 1);
INSERT INTO CourseEntity (courseEntity, courseEntityWeight, courseId) VALUES('Project 02', 25, 2);
INSERT INTO CourseEntity (courseEntity, courseEntityWeight, courseId) VALUES('Participation', 10, 1);
INSERT INTO CourseEntity (courseEntity, courseEntityWeight, courseId) VALUES('Participation', 10, 2);
GO
CREATE TABLE CourseEntityGrade(
	userId          INTEGER		NOT NULL, 
	courseEntityID	SMALLINT	NOT NULL,
	grade           INTEGER,
	latePenalty		INTEGER,
	comment         VARCHAR(8000),
	PRIMARY KEY (userId, courseEntityID),
	FOREIGN KEY (userId) REFERENCES TWD_User(userId),
	FOREIGN KEY (courseEntityID) REFERENCES courseEntity(courseEntityID))
GO
INSERT INTO CourseEntityGrade VALUES(1, 15, 98.2, 0,'Good detail shown in your code.');
INSERT INTO CourseEntityGrade VALUES(2, 15, 99.4, 0, 'Good design but please reduce the number of magic numbers.');
INSERT INTO CourseEntityGrade VALUES(3, 15, 89.2, 10, 'Please avoid code redundancy in the future.');
INSERT INTO CourseEntityGrade VALUES(4, 15, 87.3, 0, 'Good use of constnts.');
INSERT INTO CourseEntityGrade VALUES(1, 16, 78.3, 20, 'Error in the loop. Needs to exit when condition is met.');
INSERT INTO CourseEntityGrade VALUES(2, 16, 95.9, 0, 'Font sizes are too small. the visually impared will struggle.');
INSERT INTO CourseEntityGrade VALUES(3, 16, 97.3, 10, 'Needs to be more scalable.');
INSERT INTO CourseEntityGrade VALUES(4, 16, 89.9, 0, 'Nice work, strong coding practices used.');
GO
CREATE TABLE EntityParameter(
	entityParameterId		SMALLINT IDENTITY(1,1) NOT NULL, 
	entityParameter     	VARCHAR(60)	NOT NULL,
	entityParameterWeight   SMALLINT,
	courseEntityId          SMALLINT,
	PRIMARY KEY (entityParameterId),
	FOREIGN KEY (courseEntityId) REFERENCES CourseEntity(courseEntityId))
GO
INSERT INTO EntityParameter (entityParameter, entityParameterWeight, courseEntityId) VALUES('Assignment - 1', 21, 15);
INSERT INTO EntityParameter (entityParameter, entityParameterWeight, courseEntityId) VALUES('Assignment - 2', 21, 15);
INSERT INTO EntityParameter (entityParameter, entityParameterWeight, courseEntityId) VALUES('Instructions Followed', 21, 15);
INSERT INTO EntityParameter (entityParameter, entityParameterWeight, courseEntityId) VALUES('Design Accessibility', 21, 15);
INSERT INTO EntityParameter (entityParameter, entityParameterWeight, courseEntityId) VALUES('Assignment - 1', 21, 16);
INSERT INTO EntityParameter (entityParameter, entityParameterWeight, courseEntityId) VALUES('Assignment - 2', 21, 16);
INSERT INTO EntityParameter (entityParameter, entityParameterWeight, courseEntityId) VALUES('Instructions Followed', 21, 16);
INSERT INTO EntityParameter (entityParameter, entityParameterWeight, courseEntityId) VALUES('Design Accessibility', 21, 16);
GO
CREATE TABLE EntityParameterGrade(
	userId				INTEGER		NOT NULL, 
	entityParameterId	SMALLINT	NOT NULL,
	grade				INTEGER,
	latePenalty		    INTEGER,
	comment				VARCHAR(8000),
	PRIMARY KEY (userId, entityParameterId),
	FOREIGN KEY (userId) REFERENCES TWD_User(userId),
	FOREIGN KEY (entityParameterId) REFERENCES EntityParameter(entityParameterId))
GO
INSERT INTO EntityParameterGrade VALUES(1, 1, 98.2, 'Good detail shown in your code.');
INSERT INTO EntityParameterGrade VALUES(2, 1, 99.4, 'Good design but please reduce the number of magic numbers.');
INSERT INTO EntityParameterGrade VALUES(3, 1, 89.2, 'Please avoid code redundancy in the future.');
INSERT INTO EntityParameterGrade VALUES(4, 1, 87.3, 'Good use of constnts.');
INSERT INTO EntityParameterGrade VALUES(1, 2, 78.3, 'Error in the loop. Needs to exit when condition is met.');
INSERT INTO EntityParameterGrade VALUES(2, 2, 95.9, 'Font sizes are too small. the visually impared will struggle.');
INSERT INTO EntityParameterGrade VALUES(3, 2, 97.3, 'Needs to be more scalable.');
INSERT INTO EntityParameterGrade VALUES(4, 2, 89.9, 'Nice work, strong coding practices used.');
GO
CREATE TABLE [dbo].[webpages_Membership] (
    [UserId]                                  INT            NOT NULL,
    [CreateDate]                              DATETIME       NULL,
    [ConfirmationToken]                       NVARCHAR (128) NULL,
    [IsConfirmed]                             BIT            DEFAULT ((0)) NULL,
    [LastPasswordFailureDate]                 DATETIME       NULL,
    [PasswordFailuresSinceLastSuccess]        INT            DEFAULT ((0)) NOT NULL,
    [Password]                                NVARCHAR (128) NOT NULL,
    [PasswordChangedDate]                     DATETIME       NULL,
    [PasswordSalt]                            NVARCHAR (128) NOT NULL,
    [PasswordVerificationToken]               NVARCHAR (128) NULL,
    [PasswordVerificationTokenExpirationDate] DATETIME       NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC)
);
CREATE TABLE [dbo].[webpages_OAuthMembership] (
    [Provider]       NVARCHAR (30)  NOT NULL,
    [ProviderUserId] NVARCHAR (100) NOT NULL,
    [UserId]         INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Provider] ASC, [ProviderUserId] ASC)
);
CREATE TABLE [dbo].[webpages_UsersInRoles] (
    [UserId] INTEGER NOT NULL,
    [RoleId] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC, [RoleId] ASC),
    FOREIGN KEY ([UserId]) REFERENCES [TWD_User] (userID),
    CONSTRAINT [fk_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[webpages_Roles] ([RoleId])
);
GO
SELECT * FROM [dbo].[webpages_Membership]
SELECT * FROM [dbo].[webpages_Roles]
SELECT * FROM [dbo].[webpages_UsersInRoles]
SELECT * FROM TWD_User;
SELECT * FROM CourseEntity;
SELECT * FROM Marker;
SELECT * FROM Course;
SELECT * FROM Module;
SELECT * FROM TWD_User;
SELECT * FROM Intake;
